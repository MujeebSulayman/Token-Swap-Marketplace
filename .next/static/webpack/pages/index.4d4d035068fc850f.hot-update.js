/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/SingleCard.js":
/*!**********************************!*\
  !*** ./components/SingleCard.js ***!
  \**********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// import { useState, useRef, useEffect } from 'react';\n// import {\n// \tgetTokenAddress,\n// \tgetTokenBalance,\n// \tincreaseAllowance,\n// } from '../utils/context';\n// import { ethers } from 'ethers';\n// import TransactionStatus from './TransactionStatus';\n// import toast, { Toaster } from 'react-hot-toast';\n// import {\n// \tClipboardIcon,\n// \tclickboardCheckIcon,\n// \tPlusIcon,\n// } from '@heroicons/react/outline';\n// const SingleCard = ({ index, name, walletAddress }) => {\n// \tconst [balance, setBalance] = useState('_');\n// \tconst [tokenAddress, setTokenAddress] = useState();\n// \tconst [copyIcon, setCopyIcon] = useState({ icon: ClipboardIcon });\n// \tconst [txPending, setTxPending] = useState(false);\n// \tconst notifyError = () => toast.error(msg, { duration: 6000 });\n// \tconst notifySuccess = () =>\n// \t\ttoast.success('Transaction Successful', { duration: 6000 });\n// \tuseEffect(() => {\n// \t\tif (name && walletAddress) {\n// \t\t\tfetchTokenBalance();\n// \t\t\tfetchTokenAddress();\n// \t\t} else {\n// \t\t\tsetBalance('_');\n// \t\t}\n// \t}, [name, walletAddress]);\n// \tasync function fetchTokenBalance() {\n// \t\tconst bal = await getTokenBalance(name, walletAddress);\n// \t\tconst fBal = ethers.utils.formatUnits(bal.toString(), 18);\n// \t\tsetBalance(fBal.toString());\n// \t}\n// \tasync function fetchTokenAddress() {\n// \t\tconst address = await getTokenAddress(name)\n// \t\tsetTokenAddress(address)\n// \t}\n// \treturn (\n// \t\t<article className='flex flex-col bg-[#212429]'>\n// \t\t\t<a\n// \t\t\t\thref=''\n// \t\t\t\tnoopener\n// \t\t\t\tnoreferrer\n// \t\t\t\taria-label='Loren ipsum Loren ipsum Loren ipsum'></a>\n// \t\t</article>\n// \t);\n// };\n// export default SingleCard;\nvar SingleCard = function() {};\n_c = SingleCard;\nvar _c;\n$RefreshReg$(_c, \"SingleCard\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1NpbmdsZUNhcmQuanMuanMiLCJtYXBwaW5ncyI6IkFBQUEsdURBQXVEO0FBQ3ZELFdBQVc7QUFDWCxvQkFBb0I7QUFDcEIsb0JBQW9CO0FBQ3BCLHNCQUFzQjtBQUN0Qiw2QkFBNkI7QUFDN0IsbUNBQW1DO0FBQ25DLHVEQUF1RDtBQUN2RCxvREFBb0Q7QUFDcEQsV0FBVztBQUNYLGtCQUFrQjtBQUNsQix3QkFBd0I7QUFDeEIsYUFBYTtBQUNiLHFDQUFxQztBQUVyQywyREFBMkQ7QUFDM0QsZ0RBQWdEO0FBQ2hELHVEQUF1RDtBQUN2RCxzRUFBc0U7QUFDdEUsc0RBQXNEO0FBQ3RELG1FQUFtRTtBQUNuRSwrQkFBK0I7QUFDL0IsaUVBQWlFO0FBRWpFLHFCQUFxQjtBQUNyQixpQ0FBaUM7QUFDakMsMEJBQTBCO0FBQzFCLDBCQUEwQjtBQUMxQixhQUFhO0FBQ2Isc0JBQXNCO0FBQ3RCLE1BQU07QUFDTiw4QkFBOEI7QUFFOUIsd0NBQXdDO0FBQ3hDLDREQUE0RDtBQUU1RCwrREFBK0Q7QUFDL0QsaUNBQWlDO0FBQ2pDLEtBQUs7QUFFTCx3Q0FBd0M7QUFDeEMsZ0RBQWdEO0FBQ2hELDZCQUE2QjtBQUM3QixLQUFLO0FBQ0wsWUFBWTtBQUNaLHFEQUFxRDtBQUNyRCxRQUFRO0FBQ1IsY0FBYztBQUNkLGVBQWU7QUFDZixpQkFBaUI7QUFDakIsNERBQTREO0FBQzVELGVBQWU7QUFDZixNQUFNO0FBQ04sS0FBSztBQUVMLDZCQUE2QjtBQUU3QixJQUFNQSxVQUFVLEdBQUcsV0FBTSxFQUV4QjtBQUZLQSxLQUFBQSxVQUFVIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvU2luZ2xlQ2FyZC5qcz8yM2U2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCB7IHVzZVN0YXRlLCB1c2VSZWYsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0Jztcbi8vIGltcG9ydCB7XG4vLyBcdGdldFRva2VuQWRkcmVzcyxcbi8vIFx0Z2V0VG9rZW5CYWxhbmNlLFxuLy8gXHRpbmNyZWFzZUFsbG93YW5jZSxcbi8vIH0gZnJvbSAnLi4vdXRpbHMvY29udGV4dCc7XG4vLyBpbXBvcnQgeyBldGhlcnMgfSBmcm9tICdldGhlcnMnO1xuLy8gaW1wb3J0IFRyYW5zYWN0aW9uU3RhdHVzIGZyb20gJy4vVHJhbnNhY3Rpb25TdGF0dXMnO1xuLy8gaW1wb3J0IHRvYXN0LCB7IFRvYXN0ZXIgfSBmcm9tICdyZWFjdC1ob3QtdG9hc3QnO1xuLy8gaW1wb3J0IHtcbi8vIFx0Q2xpcGJvYXJkSWNvbixcbi8vIFx0Y2xpY2tib2FyZENoZWNrSWNvbixcbi8vIFx0UGx1c0ljb24sXG4vLyB9IGZyb20gJ0BoZXJvaWNvbnMvcmVhY3Qvb3V0bGluZSc7XG5cbi8vIGNvbnN0IFNpbmdsZUNhcmQgPSAoeyBpbmRleCwgbmFtZSwgd2FsbGV0QWRkcmVzcyB9KSA9PiB7XG4vLyBcdGNvbnN0IFtiYWxhbmNlLCBzZXRCYWxhbmNlXSA9IHVzZVN0YXRlKCdfJyk7XG4vLyBcdGNvbnN0IFt0b2tlbkFkZHJlc3MsIHNldFRva2VuQWRkcmVzc10gPSB1c2VTdGF0ZSgpO1xuLy8gXHRjb25zdCBbY29weUljb24sIHNldENvcHlJY29uXSA9IHVzZVN0YXRlKHsgaWNvbjogQ2xpcGJvYXJkSWNvbiB9KTtcbi8vIFx0Y29uc3QgW3R4UGVuZGluZywgc2V0VHhQZW5kaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbi8vIFx0Y29uc3Qgbm90aWZ5RXJyb3IgPSAoKSA9PiB0b2FzdC5lcnJvcihtc2csIHsgZHVyYXRpb246IDYwMDAgfSk7XG4vLyBcdGNvbnN0IG5vdGlmeVN1Y2Nlc3MgPSAoKSA9PlxuLy8gXHRcdHRvYXN0LnN1Y2Nlc3MoJ1RyYW5zYWN0aW9uIFN1Y2Nlc3NmdWwnLCB7IGR1cmF0aW9uOiA2MDAwIH0pO1xuXG4vLyBcdHVzZUVmZmVjdCgoKSA9PiB7XG4vLyBcdFx0aWYgKG5hbWUgJiYgd2FsbGV0QWRkcmVzcykge1xuLy8gXHRcdFx0ZmV0Y2hUb2tlbkJhbGFuY2UoKTtcbi8vIFx0XHRcdGZldGNoVG9rZW5BZGRyZXNzKCk7XG4vLyBcdFx0fSBlbHNlIHtcbi8vIFx0XHRcdHNldEJhbGFuY2UoJ18nKTtcbi8vIFx0XHR9XG4vLyBcdH0sIFtuYW1lLCB3YWxsZXRBZGRyZXNzXSk7XG5cbi8vIFx0YXN5bmMgZnVuY3Rpb24gZmV0Y2hUb2tlbkJhbGFuY2UoKSB7XG4vLyBcdFx0Y29uc3QgYmFsID0gYXdhaXQgZ2V0VG9rZW5CYWxhbmNlKG5hbWUsIHdhbGxldEFkZHJlc3MpO1xuXG4vLyBcdFx0Y29uc3QgZkJhbCA9IGV0aGVycy51dGlscy5mb3JtYXRVbml0cyhiYWwudG9TdHJpbmcoKSwgMTgpO1xuLy8gXHRcdHNldEJhbGFuY2UoZkJhbC50b1N0cmluZygpKTtcbi8vIFx0fVxuXG4vLyBcdGFzeW5jIGZ1bmN0aW9uIGZldGNoVG9rZW5BZGRyZXNzKCkge1xuLy8gXHRcdGNvbnN0IGFkZHJlc3MgPSBhd2FpdCBnZXRUb2tlbkFkZHJlc3MobmFtZSlcbi8vIFx0XHRzZXRUb2tlbkFkZHJlc3MoYWRkcmVzcylcbi8vIFx0fVxuLy8gXHRyZXR1cm4gKFxuLy8gXHRcdDxhcnRpY2xlIGNsYXNzTmFtZT0nZmxleCBmbGV4LWNvbCBiZy1bIzIxMjQyOV0nPlxuLy8gXHRcdFx0PGFcbi8vIFx0XHRcdFx0aHJlZj0nJ1xuLy8gXHRcdFx0XHRub29wZW5lclxuLy8gXHRcdFx0XHRub3JlZmVycmVyXG4vLyBcdFx0XHRcdGFyaWEtbGFiZWw9J0xvcmVuIGlwc3VtIExvcmVuIGlwc3VtIExvcmVuIGlwc3VtJz48L2E+XG4vLyBcdFx0PC9hcnRpY2xlPlxuLy8gXHQpO1xuLy8gfTtcblxuLy8gZXhwb3J0IGRlZmF1bHQgU2luZ2xlQ2FyZDtcblxuY29uc3QgU2luZ2xlQ2FyZCA9ICgpID0+IHtcblx0XG59Il0sIm5hbWVzIjpbIlNpbmdsZUNhcmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/SingleCard.js\n"));

/***/ })

});